name: Pulumi Deployment
on: [push, pull_request]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      # 1. Clean environment setup
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          clean: true  # Nuclear clean

      # 2. Node.js with forced clean install
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Nuclear npm install
        run: |
          rm -rf node_modules package-lock.json
          npm install --force --legacy-peer-deps
          npm rebuild

      # 3. Install Pulumi CLI with manual plugin setup
      - name: Install Pulumi
        run: |
          curl -fsSL https://get.pulumi.com | sh -s -- --version 3.85.0
          echo "$HOME/.pulumi/bin" >> $GITHUB_PATH
          pulumi plugin install nodejs v3.85.0 --reinstall  # Force plugin reinstall

      # 4. AWS Credentials
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::515880899753:role/GithubActionRole
          aws-region: us-east-1
          audience: sts.amazonaws.com

      # 5. Run Pulumi with debug
      - name: Run Pulumi
        run: |
          export PULUMI_SKIP_UPDATE_CHECK=true
          export PULUMI_HOME="$HOME/.pulumi"
          pulumi preview \
            --stack dev \
            --non-interactive \
            --logtostderr \
            -v=9 2>&1 | tee pulumi.log
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
          NODE_OPTIONS: "--max-old-space-size=4096"

      # 6. Upload logs if failed
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: pulumi-debug-logs
          path: pulumi.log